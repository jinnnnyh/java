public class CarEx {
  public static void main(String[] args) {
    // Car 클래스 타입의 객체 myCar, yourCar
    Car myCar = new Car("포르쉐");
    Car yourCar = new Car("벤츠");

    // 동일한 클래스로 객체를 생성하더라도 메모리에서는 서로 다른 공간을 사용함
    // 힙이 다름

    // myCar 객체의 멤버인 run() 메소드를 호출, run(): 인스턴스 멤버
    // 객체를 생성해서 멤버를 메모리에 로딩해야함
    myCar.run();

    // yourCar 객체의 멤버인 run() 메소드를 호출, run() : 인스턴스 멤버
    yourCar.run();
  }
}

// 정적 멤버
// 서로 데이터를 공유
// 정적 멤버는 new 클래스로 만들어지는게 아님
// 클래스가 로딩 시 함께 메모리에 로딩되므로
// 정적 멤버를 사용할 때 객체가 생성됐는지 아닌지 확인할 수 없다
// 따라서 객체가 생성되어야 사용할 수 있는 인스턴스 멤버 사용 못함

// 항상 메모리 주소가 동일
// 정적 멤버는 정적 멤버만 사용 가능


// 클래스 (정적)멤버는 객체를 만들기 전에 바로 접근 가능
// 클래스 (정적)멤버라 메모리에 로딩 되어있음
// 클래스.필드명

// 인스턴스 멤버
// new 클래스로 생성해야 사용 가능
// 인스턴스 멤버는 둘다(인스턴스, 정적) 사용 가능
// 정적 멤버는 이미 메모리에 로딩되어있기 때문에 인스턴스 멤버가 정적 멤버 사용 가능

// 정적 초기화 블록 : 정적 멤버 전용 생성자
// 정적 멤버를 초기화하기 위한 일종의 생성자(진짜 생성자는 아님)

